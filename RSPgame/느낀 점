어려웠던 점 혹은 고민됐던 점:

어떻게 하면 최대한 기능을 잘게 쪼개어서 메소드 하나에 넣을 수 있을지, 어떻게 하면 재사용 가능한 코드를 만들 수 있는지 몰라서 최대한 기능을 나누기 위해 노력했던 부분이 가장 힘들었다.
그런 코드를 만들고 싶은 이유는 아래와 같다.
프로그래밍을 배운답시고 공부하고 있는 과정 중에 문득, 개발자가 무슨 혼자서 만들어본 프로그램이 없나라는 생각이 들었다.
사이드 프로젝트를 진행하는 것이 개발자들의 성장에 많은 도움이 된다는 이야기는 자주 들었지만, 뭔가 용기가 나지 않았다. 내가 그 정도 실력이 안 될 것 같았기 때문이었다.
아무래도 잘하시는 분들의 완성된 코드만 리뷰하다 보니까, 완벽하게 메소드로 기능이 하나하나 정리되어 있는 그분들의 코드를 보고는 전의를 상실했다.

그래서 항상 클론코딩만 했다. 특히 많은 개발자 선배분들이 걱정하시는 것 중 하나인 무지성 클론코딩을 했다. 생각은 꺼두고 무작정 눈에 보이는 코드만 그대로 옮겼다.
심지어 거기에서도 에러가 발생하니, 있는 것도 제대로 못 따라 적는 나 자신을 보면서 자존감이 추락했다.
하지만 절대로 가만히 있고 싶지 않아서, 나도 그런 코드를 짤 수 있는 사람으로 성장하고 싶어서, 이런 간단한 게임을 하나 만들었다.
보기에도 그리고 내 처음 계획 단계의 생각에서도 간단했지만, 만드는 과정을 겪어보니 절대로 간단하지가 않았다.

물론 내 실력이 많이 부족하기 때문에 그렇게 느꼈을 것이다.
그래도 이렇게 부족함을 느끼는 것또한 성장이라고 생각한다. 부족함을 느꼈으니 내가 무엇을 발전시켜야 할지, 그것을 발전시키기 위해서 뭘 노력해야할지 생각할 기회가 생기기 때문이다.
그리고 완성을 하고 나니 내가 어떤 프로그램을 만들었다는 것에 성취감을 느꼈고 이번 과정을 통해 다른 걸 더 만들 수 있지 않을까하는 욕심이 생겼다.
다음에는 생일 알리미를 만들어보고 싶다.

좋았던 점:

이번을 계기로 동기부여가 되어서 교수님 말씀처럼 “작문하는 것처럼 많이 코드를 짜보면 늘지 않을까”라는 생각이 들었다. 
내 주위에서 발견할 수 있는 불편함을 계기로 프로그램을 만들면서 개발 능력을 향상시킬 것이다.


배웠던 점:

1. 자바에서와 달리 파이썬은 다른 파일에 있는 class를 바로 사용할 수가 없었다. 자바에서는 한 패키지로 묶이지만, 파이썬은 그렇지 않기 때문이었다.
그래서 from 파일 이름 import class 이름을 통해 불러올 수 있다는 것을 구글링을 통해 배웠고 해결할 수 있었다.

2. 부모 클래스의 메소드를 사용할 수 있도록 해주는 super()에 대해서 더 배웠다. Java에서 익숙해진 이 super()는 python에서 다른 형태로 사용됐다.
기능은 같으나, 쓰는 모습이 달랐다.

개선해보고 싶은 점:

gui를 공부해서 그래픽 버전 게임으로 발전시켜보고 싶다.
